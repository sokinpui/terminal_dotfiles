unbind C-b
unbind C-h
unbind C-l
unbind c
unbind &

# Start
set-option -g default-shell /bin/zsh
set -g default-command "${SHELL}"
set -s extended-keys on
set -as terminal-features 'xterm*:extkeys'

#       Appearance
set-option -g default-terminal "tmux-256color"
set-option -ga terminal-overrides "*:Tc"
set-option -as terminal-features "*:RGB"

set -gq allow-passthrough on
set -g visual-activity off
# Set the default paste mode
set-option -g set-clipboard external

#   Status bar
set-option -g status-style default
set-option -g status-position bottom
set-option -g status-keys vi

set-option -g status on
set-option -g status-interval 1

# left
set-option -g status-justify left
set-option -g status-left "#[fg=cyan][#S]  "
set-option -g status-left-length 40
set-option -g status-left-style default

# right
set-option -g status-right ""
set-option -g status-right-length 10
set-option -g status-right-style default

#       Remap
#   Prefix
set -g prefix c-e
bind c-e send-prefix
#set -g prefix C-g
#bind C-g send-prefix
# source tmux config
bind ^l source-file ~/.config/tmux/tmux.conf \; display-message "Config reloaded.."

#   Pane
setw -g pane-base-index 1
# bind -n M-q kill-pane
bind -n M-w kill-pane
bind q kill-pane
bind -n M-delete kill-pane

## Navigation
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?\.?(view|n?vim?x?)(-wrapped)?(diff)?$'"

bind  h select-pane -L
bind  l select-pane -R
bind  k select-pane -U
bind  j select-pane -D
# bind-key -n 'M-h' if-shell "$is_vim" 'send-keys M-h' { if -F '#{pane_at_left}' '' 'select-pane -L' }
# bind-key -n 'M-j' if-shell "$is_vim" 'send-keys M-j' { if -F '#{pane_at_bottom}' '' 'select-pane -D' }
# bind-key -n 'M-k' if-shell "$is_vim" 'send-keys M-k' { if -F '#{pane_at_top}' '' 'select-pane -U' }
# bind-key -n 'M-l' if-shell "$is_vim" 'send-keys M-l' { if -F '#{pane_at_right}' '' 'select-pane -R' }

bind-key -T copy-mode-vi 'M-h' if -F '#{pane_at_left}' '' 'select-pane -L'
bind-key -T copy-mode-vi 'M-j' if -F '#{pane_at_bottom}' '' 'select-pane -D'
bind-key -T copy-mode-vi 'M-k' if -F '#{pane_at_top}' '' 'select-pane -U'
bind-key -T copy-mode-vi 'M-l' if -F '#{pane_at_right}' '' 'select-pane -R'

#   Windows
set -g base-index 1

#bind -n M-o new-window
# bind -n M-m new-window -c "#{pane_current_path}"
bind -n M-enter new-window -c "#{pane_current_path}" -a
bind enter new-window -c "#{pane_current_path}" -a
bind r command-prompt -p "Enter new window name: " "rename-window '%%'"
bind -r -n M-, select-window -t :-
bind -r -n C-, select-window -t :-
bind -r , select-window -t :-

bind -r -n M-. select-window -t :+
bind -r -n C-. select-window -t :+
bind -r . select-window -t :+

bind -r o rotate-window -D

## Split window
unbind '"'
unbind %
bind S splitw -v -c '#{pane_current_path}'
bind - splitw -v -c '#{pane_current_path}'
bind -n M-\- splitw -v -c '#{pane_current_path}'
bind V splitw -h -c '#{pane_current_path}'
bind \\ splitw -h -c '#{pane_current_path}'
bind -n M-\' splitw -h -c '#{pane_current_path}'

## reorder window
bind-key -n M-n swap-window -t -1 \; select-window -t -1
bind-key -n M-p swap-window -t +1 \; select-window -t +1

## statusline
### current window
setw -g window-status-current-style 'fg=Green1 bold'
setw -g window-status-current-format '#I#[fg=Green1]:#[fg=Green1]#W#[fg=Green1]#F'

setw -g window-status-style default
setw -g window-status-format '#I:#W#F'

# Name of windows
set -g renumber-windows on
set-option -g allow-rename on
set-window-option -g automatic-rename on
set-option -g automatic-rename on
set-option -g automatic-rename-format '#{b:pane_current_path}'

# save last session name
set-hook -g client-session-changed 'run-shell "export LAST_TMUX_SESSION_NAME=$(tmux display-message -p \"#S\")"'

bind-key -r c run-shell '[[ $(tmux display-message -p "#S") == "config" ]] && tmux switch-client -t "$LAST_TMUX_SESSION_NAME" || ~/.config/zsh/bin/tmux-sessionizer-switch ~/dotfiles config'
bind-key -r f run-shell "tmux neww -n 'run-shell' ~/.config/zsh/bin/tmux-sessionizer"

# session
bind n command-prompt -p "new session:" "new-session -A -s '%%'"
bind R command-prompt -p "Enter new session name: " "rename-session '%%'"
bind -T choose-session r kill-session

# Default delay
set -s escape-time 0

set-option -g focus-events on

# command line
set -g message-style 'bold'

# Bells
set -g visual-activity off
set -g visual-bell off
set -g visual-silence off
setw -g monitor-activity off
set -g bell-action none
setw -g window-status-bell-style 'bold'

#    Mouse
set -g mouse on
set -g history-limit 1000000
set -g mode-style "fg=white,bg=#5c6370"

# Copy mode
setw -g mode-keys vi
bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi C-v send -X rectangle-toggle
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "pbcopy" copy-selection-no-clear
bind -T copy-mode-vi x send-keys -X copy-pipe-and-cancel "pbcopy" copy-selection-no-clear
bind -T copy-mode-vi C-c send-keys -X copy-pipe-and-cancel "pbcopy" copy-selection-no-clear
bind -T copy-mode-vi Space send-keys -X copy-pipe-and-cancel "pbcopy" copy-selection-no-clear
bind -T copy-mode-vi M-c send-keys -X copy-pipe-and-cancel "pbcopy" copy-selection-no-clear
bind -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-selection -x copy-selection-no-clear
bind P paste-buffer
bind -n M-\; copy-mode

# scrolling
bind -T copy-mode-vi u send-keys -X halfpage-up
bind -T copy-mode-vi d send-keys -X halfpage-down
unbind -T copy-mode C-u
unbind -T copy-mode C-d
