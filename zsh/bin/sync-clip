#!/bin/bash

# --- Configuration ---
# Set the user and hostname for your remote Mac.
REMOTE_HOST="mac"

# Polling interval in seconds.
# A lower number is more responsive but uses more CPU/network.
POLL_INTERVAL=1
# ---------------------

echo "Starting remote-to-local clipboard sync from $REMOTE_HOST"
echo "Press Ctrl+C to stop."

# We need to track the last content we copied to avoid running pbcopy repeatedly
# with the same content. Initialize it with the current remote content.
# The '2>/dev/null' suppresses errors if the remote is not reachable on startup.
LAST_COPIED_CONTENT=$(ssh "$REMOTE_HOST" 'pbpaste' 2>/dev/null)

# Main sync loop
while true; do
  # 1. Get the current content of the REMOTE clipboard
  # Suppress errors in case the connection drops temporarily.
  CURRENT_REMOTE_CONTENT=$(ssh "$REMOTE_HOST" 'pbpaste' 2>/dev/null)

  # 2. Check if the remote content is new and not empty
  if [[ "$CURRENT_REMOTE_CONTENT" != "$LAST_COPIED_CONTENT" ]]; then
    echo "Syncing: Remote -> Local"

    # 3. Copy the new remote content to the LOCAL clipboard.
    # Using 'printf' is safer than 'echo' for arbitrary content.
    printf "%s" "$CURRENT_REMOTE_CONTENT" | pbcopy

    # 4. Update the state to remember what we just copied.
    LAST_COPIED_CONTENT="$CURRENT_REMOTE_CONTENT"
  fi

  # Wait before the next poll
  sleep $POLL_INTERVAL
done
