#!/bin/bash

# --- Configuration ---
REMOTE_HOST="mac"
POLL_INTERVAL=1
# ---------------------

echo "[INFO] Starting bidirectional clipboard sync with '$REMOTE_HOST'"
echo "[INFO] Press Ctrl+C to stop."

# --- Initial Connection Test ---
echo "[DEBUG] Testing SSH connection and remote pbpaste..."
# The -o ConnectTimeout=5 will prevent the script from hanging indefinitely
INITIAL_REMOTE_PASTE=$(ssh -o ConnectTimeout=5 "$REMOTE_HOST" 'pbpaste' 2>/dev/null)
if [ $? -ne 0 ]; then
  echo "[ERROR] Could not connect to '$REMOTE_HOST' or run pbpaste. Is passwordless SSH configured and is the host reachable?"
  exit 1
fi
echo "[DEBUG] Initial connection successful."

# --- Get Initial State ---
LAST_LOCAL_CONTENT=$(pbpaste)
LAST_REMOTE_CONTENT="$INITIAL_REMOTE_PASTE"

echo "[STATE] Initial local content length: ${#LAST_LOCAL_CONTENT}"
echo "[STATE] Initial remote content length: ${#LAST_REMOTE_CONTENT}"

# --- Main Sync Loop ---
while true; do
  # 1. Check local
  CURRENT_LOCAL_CONTENT=$(pbpaste)
  if [[ "$CURRENT_LOCAL_CONTENT" != "$LAST_LOCAL_CONTENT" && "$CURRENT_LOCAL_CONTENT" != "$LAST_REMOTE_CONTENT" ]]; then
    echo "[SYNC] Change detected on local. Syncing Local -> Remote."
    printf "%s" "$CURRENT_LOCAL_CONTENT" | ssh "$REMOTE_HOST" 'pbcopy'
    LAST_LOCAL_CONTENT="$CURRENT_LOCAL_CONTENT"
    LAST_REMOTE_CONTENT="$CURRENT_LOCAL_CONTENT"
  fi

  # 2. Check remote
  CURRENT_REMOTE_CONTENT=$(ssh -o ConnectTimeout=5 "$REMOTE_HOST" 'pbpaste' 2>/dev/null)
  if [[ "$CURRENT_REMOTE_CONTENT" != "$LAST_REMOTE_CONTENT" && "$CURRENT_REMOTE_CONTENT" != "$LAST_LOCAL_CONTENT" ]]; then
    echo "[SYNC] Change detected on remote. Syncing Remote -> Local."
    printf "%s" "$CURRENT_REMOTE_CONTENT" | pbcopy
    LAST_REMOTE_CONTENT="$CURRENT_REMOTE_CONTENT"
    LAST_LOCAL_CONTENT="$CURRENT_REMOTE_CONTENT"
  fi

  sleep $POLL_INTERVAL
done
