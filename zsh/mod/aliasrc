#!/usr/bin/env bash

mkdc() {
  mkdir -p "$@" && echo "create $(realpath "$@")" &&
    echo "cd to  $(realpath "$@")" &&
    eval cd "\"\$$#\""
}

mkd() {
  mkdir -p "$@" && echo "create $(realpath "$@")"
}

# $1 numbers of files going to be moved, $2 target directory
#move_recent_download_to_dir() {
#  dfiles=$( ls -td ~/Downloads/* | head -n $1)
#  mv $dfiles $2
#}

# CSE gateway
#gw() {
#  echo "usage: connect to CSE gateway."
#  echo "After connection, use ssh linux[1-16] to connect remote machine."
#  ssh kpso2@gw.cse.cuhk.edu.hk
#}

# quick editing ::Editor
alias \
  vim="$EDITOR" \
  viM="$EDITOR" \
  vIM="$EDITOR" \
  vIm="$EDITOR" \
  vi="$EDITOR" \
  vI="$EDITOR" \
  v="$EDITOR" \
  nvIm="$EDITOR" \
  nvIM="$EDITOR" \
  nvMi="$EDITOR" \
  nvMI="$EDITOR" \
  nvmI="$EDITOR" \
  nvIm="$EDITOR" \
  nv="$EDITOR" \
  nV="$EDITOR" \
  nvi="$EDITOR" \
  nvI="$EDITOR" \
  sz="source $HOME/.zshrc" \
  vzz="$EDITOR $HOME/.zshrc" \
  vza="$EDITOR $HOME/.config/zsh/mod/aliasrc" \
  vzp="$EDITOR $HOME/.zprofile" \
  vze="$EDITOR $HOME/.zshenv" \
  vzs="$EDITOR $HOME/.config/zsh/mod/shortcuts" \
  vt="$EDITOR $HOME/.config/zsh/script/ts" \
  vvv="$EDITOR $HOME/.config/nvim/init.lua" \
  vvm="$EDITOR $HOME/.config/nvim/after/plugin/mapping.vim" \
  vvs="$EDITOR $HOME/.config/nvim/after/plugin/setting.vim" \
  vvf="$EDITOR $HOME/.config/nvim/after/plugin/format.vim" \
  vvl="$EDITOR $HOME/.config/nvim/lua/setup.lua" \
  vva="$EDITOR $HOME/.config/nvim/after/plugin/appearance.vim" \
  vvp="$EDITOR $HOME/.config/nvim/after/plugin/plugins.vim"

# Directories
setopt autopushd pushdignoredups
alias \
  ..='cd ..' \
  ...='cd ../..' \
  ....='cd ../../..' \
  .....='cd ../../../..' \
  ......='cd ../../../../..' \
  d-='cd -' \
  1="cd +1" \
  2="cd +2" \
  3="cd +3" \
  4="cd +4" \
  5="cd +5" \
  6="cd +6" \
  7="cd +7" \
  8="cd +8" \
  9="cd +9"
# mkd='mkdir -p'

d() {
  [[ $1 == "-" ]] && cd - && return
  [ -z "$1" ] && dirs -v && return || cd +"$1"
}

# cmd too short, verbose output
# if user name is mac, then don't alias for this
alias \
  mv="mv -v" \
  rm="$HOME/.local/bin/trash-put" \
  rs="$HOME/.local/bin/trash-restore" \
  cp="cp -r -v"

# git
alias \
  g="git" \
  ga="git add" \
  gm="git commit" \
  gmm="git commit -m" \
  gp="git push" \
  gcl="git clone" \
  cgpush="config_git_push" \
  gb="git branch" \
  gna="git notes add" \
  gl="git log" \
  gd="git diff" \
  gdt="git difftool" \
  gs="git status" \
  gsu="git status --untracked-files" \
  gbb="git checkout -b" \
  gsw="git switch"
# gsw="git branch | grep -v \"^\*\" | fzf --height=20% --reverse --info=inline | xargs git checkout"

gi() {
  git init
  git add --all $PWD
  git commit -m "First commit"
}

# fedora package manager dnf
alias \
  dnf="dnf" \
  dnfa="sudo dnf autoremove" \
  dnfs="dnf search"

# customized function
alias \
  qn="quick_note" \
  fnrs="file-name-remove-space"

# Readalbe & color
# mac only
if [[ "$OSTYPE" == "darwin"* ]]; then
  alias \
    ls="gls --group-directories-first --color=always -h" \
    ll="gls --group-directories-first --color=always -hl" \
    la="gls --group-directories-first -lah --color=always"
else
  alias \
    ls="ls --group-directories-first --color=always -h" \
    ll="ls --group-directories-first --color=always -hl" \
    la="ls --group-directories-first -lah --color=always"
fi

alias \
  fd="fd --color auto -i" \
  grep="grep -i --color=auto" \
  rg="rg -i" \
  htop="TERM=xterm-256color htop" \
  mc="mc -b" \
  df="df -h"

# ls
l() {
  [ -z "$*" ] && ls -h --color=auto && return
  command ls -h --color=auto -"$1" "${@:2}"
}

# hugo
# list all create new hugo post and edit it
alias h="hugo"

# steam
alias steam="steam -forcedesktopscaling 1.5"

# python
alias \
  python="python3" \
  pip="pip3"
# python="$(brew --prefix python)/bin/python3.12" \
# pip="pip3" \
# python="$(brew --prefix python)/bin/python3.12" \
# pip="~/.local/bin/pip3.12" \
# pip3="~/.local/bin/pip3.12"

alias conda-init="source $HOME/.local/scripts/conda-init"

alias vpn="export http_proxy=http://127.0.0.1:1087;export https_proxy=http://127.0.0.1:1087;export ALL_PROXY=socks5://127.0.0.1:1080;export NO_PROXY=localhost,127.0.0.1"

# alias only if the command z is found
if command -v zoxide &>/dev/null; then
  alias z="z"
fi

alias marta="marta --new-window"

alias pyvenv="python -m venv .env ; source .env/bin/activate"

alias ggt="bat ~/.git.tokens"

alias tt="tmux-sessionizer"

# Smart tmux session management
# Intercepts the `tmux` command to provide "attach or create" functionality
# for a default session named "0".
tmux() {
  if [ "$#" -gt 0 ]; then
    command tmux "$@"
    return
  fi

  tmux-sessionizer ~ None
}

yabai() {
  # If arguments are provided (e.g., "tmux ls", "tmux attach -t work"),
  # just run the command as is. The `command` prefix prevents infinite loops.
  if [ "$#" -gt 0 ]; then
    command yabai "$@"
    return
  fi

  command yabai --restart-service
}

skhd() {
  # If arguments are provided (e.g., "tmux ls", "tmux attach -t work"),
  # just run the command as is. The `command` prefix prevents infinite loops.
  if [ "$#" -gt 0 ]; then
    command skhd "$@"
    return
  fi

  command skhd --restart-service
}

ssh() {
  # If arguments are provided (e.g., "tmux ls", "tmux attach -t work"),
  # just run the command as is. The `command` prefix prevents infinite loops.
  if [ "$#" -gt 0 ]; then
    command ssh "$@"
    return
  fi

  command ssh mac -t "tmux-sessionizer"
}
