#!/usr/bin/env bash

# fzf edit recent file
open-recent-edit-file() {
  cwd=$(pwd)
  # select_file=$(find . -type f -not -path '*/.*' -exec ls -lt1 -- {} + \
  #   | sed 's|^\./||' \
  #   | fzf --height 40% --reverse \
  #   --header="cwd=$cwd  | cmd='$EDITOR <file>'  ")
  select_file=$(
    fd . --type=file \
      -E "*.png" \
      -E "*.jpg" \
      -E "*.jpeg" \
      -E "*.mp3" \
      -E "*.mp4" \
      -E "*.docx" \
      -E "*.doc" \
      -E "*.xlsx" \
      -E "*.wav" \
      -E "*.gif" \
      -E "*.psd" \
      -E "*.pdf" \
      -E "*.tiff" \
      -E "*.avif" \
      -E "*.jfif" \
      -E "*.pjeg" \
      -E "*.pjp" \
      -E "*.svg" \
      -E "*.wbep" \
      -E "*.bmp" \
      -E "*.ico" \
      -E "*.cur" \
      -E "*.tif" \
      -E "*.mov" \
      -E "*.avi" \
      -E "*.wmv" \
      -E "*.flv" \
      -E "*.mkv" \
      -E "*.webm" \
      -E "*.aac" \
      -E "*.flac" \
      -E "*.aif" \
      -E "*.m4a" \
      -E "__pycache__" \
      -E "*.ogg" |
      xargs ls -1t |
      fzf --height 40% --reverse \
        --header="cwd=$cwd  | cmd='$EDITOR <file>'  "
  )
  if [ -z $select_file ]; then
    zle reset-prompt
    return
  fi
  [ ! -z $select_file ] && print -s $EDITOR $select_file
  $EDITOR $select_file
  [ ! -z $select_file ] && echo "$EDITOR $select_file"
  cd $cwd
  zle accept-line
}
zle -N open-recent-edit-file
bindkey '^f' open-recent-edit-file

open-recent-cd() {
  selected_dir=$(fd --type=d --exclude node_modules |
    fzf --height 40% --reverse)
  if [ -z $selected_dir ]; then
    zle reset-prompt
    return
  fi
  cd $selected_dir

  zle accept-line
}

zle -N open-recent-cd
bindkey '^y' open-recent-cd

jump-to-dir-in-git-repo() {
  cd $(git rev-parse --show-toplevel)
  selected_dir=$(fd --type=d | fzf --height 40% --reverse)
  if [ -z $selected_dir ]; then
    zle reset-prompt
    return
  fi
  cd $selected_dir

  zle accept-line
}

zle -N jump-to-dir-in-git-repo
bindkey '^g' jump-to-dir-in-git-repo

fzf-file-widget() {
  LBUFFER="${LBUFFER}$(fd --type f | fzf --height 40% --reverse)"
  local ret=$?
  zle reset-prompt
  return $ret
}

zle -N fzf-file-widget
bindkey -M vicmd '^T' fzf-file-widget
bindkey -M viins '^T' fzf-file-widget

# zoxide-jump() {
#   # Assign the result of zoxide and fzf to a variable
#   local dir="$(zoxide query --list | fzf --height 40% --reverse)"
#   # Check if the directory string is non-empty
#   if [[ -z "$dir" ]]; then
#     # If it is empty, reset the prompt and return
#     zle reset-prompt
#     return
#   fi
#   if [[ -d "$dir" ]]; then
#     # If the directory exists, change to it
#     tmux new-window -c "$dir"
#   else
#     # If the directory does not exist, print an error message
#     echo "Directory not found: $dir"
#   fi
#   zle accept-line
# }
# # autoload -U zoxide-jump
# zle -N zoxide-jump
# bindkey '^z' zoxide-jump
#
# tmux-sessionor
# In ~/.zshrc
# tmux-sessionor widget

# sessionor() {
#     if [[ -f $HOME/.config/zsh/bin/tmux-sessionizer ]]; then
#       if [[ -z $TMUX ]]; then
#         tmux neww -n 'run-shell' $HOME/.config/zsh/bin/tmux-sessionizer
#         zle accept-line
#       else
#         tmux neww -n 'run-shell' $HOME/.config/zsh/bin/tmux-sessionizer
#         zle accept-line
#       fi
#     else
#         echo "Error: tmux-sessionizer script not found"
#         return 1
#     fi
# }
# zle -N sessionor
# bindkey '^g' sessionor
