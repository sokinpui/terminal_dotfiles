# vi: set filetype=zsh
# Wrapper function for the git-worktreeizer script.

if ! git rev-parse --is-inside-work-tree >/dev/null 2>&1; then
    printf "Error: Not a git repository.\n" >&2
    return 1
fi

local script_output
local exit_code
local last_wt_file="${HOME}/.wt_last"

# Run the dispatcher script, capturing its stdout and exit code.
# Stderr is passed through, so error messages from the script appear immediately.
script_output=$(git-worktreeizer "$@")
exit_code=$?

# Act based on the exit code from the script.
case $exit_code in
  0)
    # Exit code 0: Success, and a path was returned to cd into.
    if [ -n "$script_output" ] && [ -d "$script_output" ]; then
      # Save the current directory path before changing to the new one.
      printf "%s" "$PWD" > "$last_wt_file"
      cd "$script_output" || return 1
    elif [ -n "$script_output" ]; then
      # This case handles when a path was returned but it's not a directory.
      printf "Error: Target path '%s' is not a directory.\n" "$script_output" >&2
      return 1
    fi
    ;;
  2)
    # Exit code 2: Success, this was an informational command (e.g., list, remove).
    # The command's output was captured in script_output, so we print it.
    # We add a newline for commands that might not output one.
    printf "%s\n" "$script_output"
    ;;
  1 | *)
    # Exit code 1 or any other: An error occurred.
    # The script already printed an error message to stderr.
    # We just pass the error code along.
    return $exit_code
    ;;
esac
