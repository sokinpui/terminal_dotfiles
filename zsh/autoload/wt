# vi: set filetype=zsh
# Wrapper function for the git-worktreeizer script.

if ! git rev-parse --is-inside-work-tree >/dev/null 2>&1; then
    printf "Error: Not a git repository.\n" >&2
    return 1
fi

local target_dir
local exit_code
local last_wt_file="${HOME}/.wt_last"

# Run the dispatcher script, capturing its output and exit code.
target_dir=$(git-worktreeizer "$@")
exit_code=$?

# Act based on the exit code from the script.
case $exit_code in
  0)
    # Exit code 0: Success, and a path was returned to cd into.
    if [ -n "$target_dir" ]; then
      # Save the current directory path before changing to the new one.
      printf "%s" "$PWD" > "$last_wt_file"
      cd "$target_dir" || return 1
    fi
    ;;
  2)
    # Exit code 2: Success, but this was an informational command (like 'list').
    # The command's output was captured in target_dir, so we print it.
    printf "%s\n" "$target_dir"
    ;;
  *)
    # Any other non-zero exit code is an error.
    # The dispatcher script already printed an error message to stderr.
    # We just pass the error code along.
    return $exit_code
    ;;
esac

# Return 0 for successful operations (codes 0 and 2).
return 0
